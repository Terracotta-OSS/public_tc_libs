/*
 * Copyright (c) 2012-2018 Software AG, Darmstadt, Germany and/or Software AG USA Inc., Reston, VA, USA, and/or its subsidiaries and/or its affiliates and/or their licensors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {
  testCompile project(':terracotta-store-client')
  testCompile project(':terracotta-ehcache-client')

  testCompile "org.hamcrest:hamcrest-all:$hamcrestVersion"
  testCompile "org.mockito:mockito-core:$mockitoVersion"
  testCompile "org.apache.felix:org.apache.felix.framework:$felixVersion"
  testCompile ("org.ops4j.pax.exam:pax-exam-junit4:$paxExamVersion") {
    exclude group:'junit', module:'junit'
    exclude group:'org.slf4j', module:'slf4j-api'
  }

  testRuntime "ch.qos.logback:logback-classic:$logbackVersion"
  testRuntime ("org.ops4j.pax.exam:pax-exam-container-native:$paxExamVersion") {
    exclude group:'org.slf4j', module:'slf4j-api'
  }
  testRuntime ("org.ops4j.pax.exam:pax-exam-link-mvn:$paxExamVersion") {
    exclude group:'org.slf4j', module:'slf4j-api'
  }
}

configurations.all {
   resolutionStrategy {
     force 'org.apache.maven.wagon:wagon-provider-api:2.5'
     force 'org.codehaus.plexus:plexus-utils:3.0.15'
     force 'org.eclipse.aether:aether-api:0.9.0.M4'
     force 'org.eclipse.aether:aether-impl:0.9.0.M4'
     force 'org.eclipse.aether:aether-spi:0.9.0.M4'
     force 'org.eclipse.aether:aether-util:0.9.0.M4'
     force 'org.sonatype.plexus:plexus-cipher:1.7'
     force 'org.sonatype.plexus:plexus-sec-dispatcher:1.4'
   }
}

sourceSets {
  test {
    // Needed for PaxExam which makes the dynamic bundle load content of a single dir
    // matching the package of the test class
    output.resourcesDir = java.outputDir
  }
}

test {
  systemProperty 'common.osgi.jar', project(':terracotta-common-client').jar.archivePath.getPath()
  systemProperty 'ehcache.osgi.jar', project(':terracotta-ehcache-client').jar.archivePath.getPath()
  systemProperty 'store.osgi.jar', project(':terracotta-store-client').jar.archivePath.getPath()
  systemProperty 'osgi.slf4j.version', slf4jVersion
  systemProperty 'osgi.logback.version', logbackVersion
}

// Helping out IDE
plugins.withType(IdeaPlugin) {
  sourceSets {
    test {
      compileClasspath += (findProject(':terracotta-store-client').configurations.compileOnly
              + findProject(':terracotta-ehcache-client').configurations.compileOnly
              + findProject(':terracotta-common-client').configurations.compileOnly)
    }
  }
}

eclipse {
  classpath {
    plusConfigurations += [ findProject(':terracotta-store-client').configurations.compileOnly,
                            findProject(':terracotta-ehcache-client').configurations.compileOnly,
                            findProject(':terracotta-common-client').configurations.compileOnly ]
  }
}
